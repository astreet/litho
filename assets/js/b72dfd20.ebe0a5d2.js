"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5283],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>i,MDXProvider:()=>u,mdx:()=>f,useMDXComponents:()=>c,withMDXComponents:()=>s});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r.apply(this,arguments)}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),s=function(e){return function(n){var t=c(n.components);return o.createElement(e,r({},n,{components:t}))}},c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},b=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,m=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),s=c(t),u=a,b=s["".concat(m,".").concat(u)]||s[u]||d[u]||r;return t?o.createElement(b,l(l({ref:n},i),{},{components:t})):o.createElement(b,l({ref:n},i))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,m=new Array(r);m[0]=b;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,m[1]=l;for(var i=2;i<r;i++)m[i]=t[i];return o.createElement.apply(null,m)}return o.createElement.apply(null,t)}b.displayName="MDXCreateElement"},52443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var o=t(83117),a=t(80102),r=(t(67294),t(3905)),m=["components"],l={id:"mountable-component",title:"Creating a Mountable Component"},p=void 0,i={unversionedId:"mountablecomponents/mountable-component",id:"mountablecomponents/mountable-component",title:"Creating a Mountable Component",description:"Mountable Components can be used to render views or drawables on the screen.",source:"@site/../docs/mountablecomponents/mountable-component.mdx",sourceDirName:"mountablecomponents",slug:"/mountablecomponents/mountable-component",permalink:"/docs/mountablecomponents/mountable-component",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/mountablecomponents/mountable-component.mdx",tags:[],version:"current",frontMatter:{id:"mountable-component",title:"Creating a Mountable Component"}},s={},c=[{value:"Comparison with KComponents",id:"comparison-with-kcomponents",level:2},{value:"Creating a Mountable Component",id:"creating-a-mountable-component",level:2}],u={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,m);return(0,r.mdx)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Mountable Components can be used to render views or drawables on the screen."),(0,r.mdx)("h2",{id:"comparison-with-kcomponents"},"Comparison with KComponents"),(0,r.mdx)("p",null,"There are several similarities between Mountable Components and ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/components-basics"},"KComponents"),":"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"They both consist of a render function that can use the component's ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/props"},"props")," and ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/hooks-intro"},"hooks"),"."),(0,r.mdx)("li",{parentName:"ul"},"As with KComponents, mountable components are subject to ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/components-basics/#rules-for-components"},"rules")," for their use."),(0,r.mdx)("li",{parentName:"ul"},"Just like KComponents, mountable components can be configured using common props and state.")),(0,r.mdx)("h2",{id:"creating-a-mountable-component"},"Creating a Mountable Component"),(0,r.mdx)("p",null,"The following example shows a Mountable Component that will return a 'mountable' that creates an 'ImageView' to be rendered on the screen."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/kotlin/mountables/SimpleImageViewComponent.kt start=start_simple_mountable_component_example end=end_simple_mountable_component_example",file:"sample/src/main/java/com/facebook/samples/litho/kotlin/mountables/SimpleImageViewComponent.kt",start:"start_simple_mountable_component_example",end:"end_simple_mountable_component_example"},"class SimpleImageViewComponent(private val style: Style? = null) : MountableComponent() {\n\n  override fun MountableComponentScope.render(): MountableRenderResult {\n    return MountableRenderResult(SimpleImageViewMountable(), style)\n  }\n}\n")),(0,r.mdx)("p",null,"A Mountable represents a reusable unit responsible for hosting the logic to create, measure, and bind the content that the Mountable Component will render. For more information, see the ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mountablecomponents/mountable"},"Mountable")," page."),(0,r.mdx)("p",null,"As can be seen from the above example, the ",(0,r.mdx)("inlineCode",{parentName:"p"},"render()")," function returns:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"A ",(0,r.mdx)("inlineCode",{parentName:"li"},"MountableRenderResult")," object that contains a 'Mountable' to be rendered"),(0,r.mdx)("li",{parentName:"ul"},"A ",(0,r.mdx)("inlineCode",{parentName:"li"},"style")," object that is applied to the mountable component.")),(0,r.mdx)("admonition",{type:"note"},(0,r.mdx)("p",{parentName:"admonition"},"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"render()")," method can be invoked from multiple threads. You should ",(0,r.mdx)("strong",{parentName:"p"},"not")," assume it can only be called from the main thread. The implementation of render should not cause side effects; essentially, it acts like a pure function.")))}d.isMDXComponent=!0}}]);